// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}


model User {
  id            Int       @default(autoincrement()) @id
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  Post          BlogPost[]
  accounts      Account[]
  sessions      Session[]
}

model Account {
  id                 String  @id @default(cuid())
  userId             Int
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       Int
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}


  model Tag {
  id    Int    @id @default(autoincrement())
  name  String @unique
  posts BlogPost[]
}
   
model BlogPost {
    id             Int       @id @default(autoincrement())
    userId         Int 
    createdAt      DateTime  @default(now()) @db.Timestamp(6)
    updatedAt      DateTime  @updatedAt
    title          String   @db.VarChar(255) @default("")
    content        String?   @db.LongText
    tags           Tag[]   
    published      Boolean   @default(false)
    publishedAt    DateTime?
    image          String?   @db.VarChar(255)
   
    User           User     @relation(fields: [userId], references: [id])

    @@index([userId])
}

